{
    "validatorPlans": [
        {
            ".desc": "Two different kinds of loops used",
            "name": "two_different_loops",
            "threshold": 2,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "controls_repeat_ext",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "device_while",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "pxt_controls_for",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "pxt_controls_for_of",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "A block comment exists in a project",
            "name": "block_comment_used",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockCommentsExist",
                    "count": 1
                }
            ]
        },
        {
            ".desc": "All function definitions have block comments",
            "name": "functions_have_comments",
            "threshold": 1,
            "checks": [
                {
                    "validator": "specificBlockCommentsExist",
                    "blockType": "function_definition"
                }
            ]
        },
        {
            ".desc": "A custom function exists and gets called",
            "name": "custom_function_called",
            "threshold": 2,
            "checks": [
                {
                    "validator": "blocksInSetExist",
                    "blocks": ["function_call", "function_call_output"],
                    "count": 1
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "function_definition",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "A variable's value is set",
            "name": "variable_set",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "variables_set",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "A variable's value is used",
            "name": "variable_accessed",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "variables_get",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "A parameter's value is used",
            "name": "parameter_variable_accessed",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "argument_reporter_string",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "argument_reporter_number",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "argument_reporter_boolean",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "argument_reporter_array",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "argument_reporter_custom",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "variables_get_reporter",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "A numeric parameter's value is used",
            "name": "numeric_parameter_variable_accessed",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "argument_reporter_number",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "A custom variable's value is set to a random number",
            "name": "variable_set_random",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "variables_set",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["device_random_used"]
                }
            ]
        },
        {
            ".desc": "Random number block used in project",
            "name": "device_random_used",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "device_random",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "make sure two numbers are equal",
            "name": "num_compare_eq",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "OP",
                    "fieldValue": "EQ",
                    "blockType": "logic_compare",
                    "childValidatorPlans": ["two_nums_exist"]
                }
            ]
        },
        {
            ".desc": "two numbers exist",
            "name": "two_nums_exist",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "math_number",
                            "count": 2
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "a number exists",
            "name": "math_num_exists",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "math_number",
                            "count": 1
                        }
                    ]
                }
            ]
        },

        {
            ".desc": "Loops used n times (to be filled in by the user)",
            "name": "n_loops",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksInSetExist",
                    "blocks": ["controls_repeat_ext", "device_while", "pxt_controls_for", "pxt_controls_for_of"],
                    "count": 0
                }
            ]
        },
        {
            ".desc": "Inputs are used n times",
            "name": "n_inputs",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksInSetExist",
                    "blocks": [
                        "device_button_event",
                        "device_gesture_event",
                        "device_pin_event",
                        "device_get_button2",
                        "device_acceleration",
                        "device_pin_is_pressed",
                        "device_get_light_level",
                        "device_heading",
                        "device_temperature",
                        "deviceisgesture",

                        "input_on_sound",
                        "input_logo_event",
                        "input_logo_is_pressed",
                        "device_get_sound_level",

                        "device_get_magnetic_force",
                        "device_get_rotation",
                        "device_get_running_time",
                        "device_get_running_time_micros",
                        "device_pin_released"
                    ],
                    "count": 0
                }
            ]
        },
        {
            ".desc": "A custom function exists and gets called",
            "name": "n_variables_used_and_set",
            "threshold": 2,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "variables_set",
                            "count": 0
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "variables_get",
                            "count": 0
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "A custom function exists and gets called",
            "name": "named_variables_used_and_set",
            "threshold": 2,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "VAR",
                    "fieldValue": "",
                    "blockType": "variables_get"
                },
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "VAR",
                    "fieldValue": "",
                    "blockType": "variables_set"
                }
            ]
        }
    ]
}

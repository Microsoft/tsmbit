.rubric-display {
    margin: 1rem 1rem;

    label[class*="common-input-label"] {
        font-size: 1rem;
    }

    i[class*="fas"] {
        font-size: 1rem;
    }

    .rubric-name-input {
        display: flex;
        flex-direction: row;
        width: 100%;

        div[class*="common-input-group"] {
            margin-left: 0.5rem;
            flex-grow: 1;
        }
    }

    .criteria-table {
        width: 100%;
        border: 1px solid var(--pxt-content-accent);
        border-radius: 0.5rem;
        overflow: hidden;
        margin: 1rem 0;

        .cell {
            display: flex;
            align-items: center;
            width: 100%;
            border-right: 1px solid var(--pxt-content-accent);
            border-bottom: 1px solid var(--pxt-content-accent);

            &:first-child {
                padding-left: 0.7rem;
            }

            &:last-child {
                border-right: none;
            }
        }

        .criteria-header {
            display: flex;
            flex-direction: row;
            align-items: center;
            font-weight: bold;

            .cell {
                height: 2rem;
            }
        }

        // Styling shared between criteria instance display and header bar display
        .criteria-action-menu-cell {
            text-align: center;
            min-width: 3rem;
            max-width: 3rem;
        }

        .criteria-text-cell {
            text-align: left;
        }

        // Styling specific to the criteria instance display (not header bar)
        .criteria-instance-display {
            display: flex;
            flex-direction: row;
            align-items: center;
            transition: background-color 0.1s ease;

            .cell {
                height: 3.5rem;
            }

            .criteria-action-menu-cell .criteria-action-menu {
                width: 100%;
                height: 100%;

                button {
                    width: 100%;
                    height: 100%;
                    background-color: var(--pxt-content-background);
                    opacity: 0; // Need opacity-based hiding (rather than display) for transitions
                    transition: background-color 0.1s ease, opacity 0.1s ease;
                    color: var(--black);
                    padding: 0.2rem;
                    border-radius: 0;

                    &:hover {
                        background-color: var(--pxt-content-accent);
                    }

                    &:focus {
                        opacity: 1;
                    }
                }
            }

            &:hover,
            &:focus {
                background-color: var(--pxt-content-background);

                .criteria-action-menu-cell .criteria-action-menu button {
                    opacity: 1;
                }
            }

            &:last-child .cell{
                border-bottom: none;
            }
        }
    }
}
